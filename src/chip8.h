// CHIP-8 Emulator Header File
#ifndef CHIP8_H
#define CHIP8_H

class chip8 {
public:
    void initialize();
    void emulate_cycle();
    void set_key(int key_index, bool pressed);

    unsigned short opcode; // Current opcode
    unsigned char memory[4096]; // Memory (4KB)
    unsigned char V[16]; // Registers (V0-VF)
    unsigned short I; // Index register
    unsigned short pc; // Program counter
    unsigned char delay_timer; // Delay timer
    unsigned char sound_timer; // Sound timer
    unsigned char gfx[64 * 32]; // Graphics (64x32 pixels)
    unsigned char key[16]; // Keypad (16 keys)
    unsigned char stack[16]; // Stack (16 levels)
    unsigned short sp; // Stack pointer
    bool drawFlag; // Flag to indicate if the screen should be redrawn
};

inline const unsigned char chip8_font[80] = {
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};

#endif //CHIP8_H